#version: '3.9'

services:
  web:
    build: .
    container_name: interflow_app
    command: gunicorn project.wsgi:application --bind 0.0.0.0:8000
    #command: /start.sh
    volumes:
      - .:/app
    # expose:
    #   - "8000":
    ports:
      - "8000:8000"
    env_file:
      - .env
    depends_on:
      - db
      - redis

  db:
    image: postgres:15
    container_name: postgres_db
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
  redis:
    image: redis:7
    container_name: redis_broker
    ports:
      - "6379:6379"

  celery:
    build: .
    container_name: celery_worker
    command: celery -A project worker --loglevel=info
    volumes:
      - .:/app
    env_file:
      - .env
    depends_on:
      - redis
      - db
      - web
  celery_worker:
    build: .
    command: celery -A project worker -l info
    volumes:
      - .:/app
    depends_on:
      - web
      - redis
  celery-beat:
    build: .
    container_name: celery_beat
    command: celery -A project beat --loglevel=info
    volumes:
      - .:/app
    env_file:
      - .env
    depends_on:
      - redis
      - db
      - web
  nginx:
    image: nginx:latest
    container_name: nginx_reverse_proxy
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./certbot/conf:/etc/letsencrypt
      - ./certbot/www:/var/www/certbot
      # - certbot-etc:/etc/letsencrypt
      # - certbot-www:/var/www/certbot
    depends_on:
      - web
  flower:
    image: mher/flower
    container_name: flower_monitor
    environment:
      - CELERY_BROKER_URL=redis://redis:6379/0
    ports:
      - "5555:5555"
    depends_on:
      - redis
      - celery_worker
  certbot:
    image: certbot/certbot
    container_name: certbot
    volumes:
      - ./certbot/conf:/etc/letsencrypt
      - ./certbot/www:/var/www/certbot
    # entrypoint: >
    #   sh -c "certbot certonly --webroot --webroot-path=/var/www/certbot 
    #   --email lansckytshinkola9@gmail.com --agree-tos --no-eff-email 
    #   -d interflow.nourtime.com"    

    entrypoint: certbot certonly --webroot -w /var/www/certbot --force-renewal --email lansckytshinkola9@gmail.com -d interflow.nourtime.com --agree-tos

volumes:
  postgres_data:
  certbot-etc:
  certbot-www:


#Démarre tous les services sauf certbot :
#docker-compose up -d web db nginx
#Pour générer les certificats SSL avec certbot :
#docker-compose run --rm certbot 
#Pour recharger les certificats SSL :
#docker-compose exec nginx nginx -s reload
#Pour arrêter tous les services :
#docker-compose down
#Pour reconstruire l'image web :